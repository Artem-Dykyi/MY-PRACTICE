// const playList = {
//     title: "My favourite songs", 
//     songs: ["Glory", "Aura", "Fluxxwave", "tt"],
//     quantity() {
//         return this.songs.length
//     }, 
//     addSong(){
//         const newSong = prompt("–Ø–∫—É –ø—ñ—Å–Ω—é –¥–æ–¥–∞—Ç–∏")
//         this.songs.push(newSong)
//         return this.songs
//     }
// }

// console.log(playList.title)
// console.log(playList.songs)
// console.log(playList.quantity())
// console.log(playList.addSong())

// –≤–∏—á–∏—Å–ª—è—é—á—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ

const friendAge = "age"

const friend = {
    name: "Arsen",
    [friendAge]: 14,
    height: 180,
}
console.log(friend.age)

// –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø–∏—Å–∏—Å –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π

// const colour = "red"

// const favourireColor = {
//     firstCol: colour,
//     secondCol: "blue",
//     thearedCol: "gren",
// }


// const firstCol = "red"

// const favourireColor = {
//     firstCol: firstCol,
//     secondCol: "blue",
//     thearedCol: "gren",
// }

// —Å–∫–æ—Ä–æ—Ç–∏–º–æ —Ü–µ–π –∑–∞–ø–∏—Å 

const firstCol = "red"
const secondCol = "blue"
const thearedCol = "green"

const favourireColor = {
    firstCol,
    secondCol,
    thearedCol,
}
// firstCol: firstCol, –º–æ–∂–µ–º–æ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ –∫–æ–ª–∏ –º–∞—î–º–æ –æ–¥–Ω–∞–∫–æ–≤—ñ 
// –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –∫–ª—é—á—ñ —ñ –∑–º—ñ–Ω–Ω—ñ–π





const user = {
    userName: "Oleg",
    userAdress: "Polova 777",
    userPhone: 828282
}

const adress = user.userAdress
console.log(adress)

const secondAdress = user["userAdress"]
console.log(secondAdress)


user.heightUser = 150
console.log(user)



// –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±'—î–∫—Ç "person" –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ "name", "age", "gender".
//  –î–æ–¥–∞–π—Ç–µ –¥–æ –æ–±'—î–∫—Ç—É –º–µ—Ç–æ–¥, —è–∫–∏–π –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω 
// –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –≤—Å—ñ—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π.

const person = {
    namePerson: "Oken",
    agePerson: "10",
    gander: "male",
    getInfo() {
        console.log(`name: ${person.namePerson}, Age: ${person.agePerson}, Gander: ${person.gander}`)
    }
}




// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ "students", –¥–µ –∫–æ–∂–µ–Ω –æ–±'—î–∫—Ç –±—É–¥–µ –º—ñ—Å—Ç–∏—Ç–∏ 
// –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ "name", "age", "gender" —Ç–∞ "grade". –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, 
// —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ "students" —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –≥—Ä—É–ø–∏.

const students = [
    {
        dogName: "Roof",
        dogAge: 3,
        gender: "male",
        grade: 10, 
        
    },
    {
        dogName: "Spot",
        dogAge: 4,
        gender: "male",
        grade: 11, 
    }
]

function averageGrad(students)  {
    let sumGrude = 0;
    for (const student of students) {
        sumGrude += student.grade
    }
    const averGrade = sumGrude / students.length;
    return
}
console.log(averageGrad(students))

// –°—Ç–≤–æ—Ä—ñ—Ç—å –æ–±‚Äô—î–∫—Ç "—Åar", —è–∫–∏–π –±—É–¥–µ –º–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ
//  "brand", "model", "year" —Ç–∞ "color". –î–æ–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥, 
//  —è–∫–∏–π –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –Ω–∞ –µ–∫—Ä–∞–Ω –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å 
//  –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –≤—Å—ñ—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π.


const car = {
    brand: "BMW",
    model: "m3",
    year: 2019,
    color: "white",
    everInfoCar () {
        return `brand ${this.brand}, model ${this.model}, year ${this.year}, color ${this.color}`
    }
}
console.log(car.everInfoCar())


// –ü—Ä–∞—Ü—é—î–º–æ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é —Ç–æ–≤–∞—Ä—ñ–≤ –≤ –∫–æ—à–∏–∫—É:
// –ù–∞–ø–∏—Å–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ –≤–∫–∞–∑–∞–Ω—ñ –Ω–∏–∂—á–µ –≤ –∫–æ–¥—ñ
// { name: 'üçé', price: 50 }
// { name: 'üçá', price: 70 }
// { name: 'üçã', price: 60 }
// { name: 'üçì', price: 110 }

// const products = {
//     fruts: [
//     { name: 'üçé', price: 50 },
//     { name: 'üçá', price: 70 },
//     { name: 'üçã', price: 60 },
//     { name: 'üçì', price: 110 },
// ],

// productsQuantity() {
//     return this.fruts.length;
// },
// addFruit() {
//     const newFruit = promt("what frut would you like to add")
//     this.fruts.push(newFruit)
//     return
// },
// deleteFruits() {
//     const deleteFtuit = promt("What fruit you like to delete")
//     let indexOfEllement;
//     for (const fruit of this.fruits) {
//         if( fruit.name === deleteFtuit) {
//             const indexOfEllement = this.fruts.indexOf(fruit)
//         }
//     }
//     // const indexOfEllement = this.fruts.indexOf(deleteFtuit)
//     this.fruts.splice(indexOfEllement, indexOfEllement + 1)
//     return
// },
// editFruts() {
//     // const editFruitName = promt("–Ø–∫–∏–π —Ñ—Ä—É–∫—Ç –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–∞–º—ñ–Ω–∏—Ç–∏");
//     const editFrutPrice = Number(prompt("—è–∫–∞ –Ω–æ–≤–∞ —Ü—ñ–Ω–∞"))
//     for (const fruit of this.fruits) {
//         if(fruit.name === editFruitName) {
//             fruit.price = editFrutPrice
//         }
//     }
// },
// totalPrice () {
//     let total = 0
//     for (const fruit of this.fruits){
//         total += fruit.price
//     }
// }
// };

// console.log(products.productsQuantity());
// console.log(products.productsQuantity());
// // products.deleteFruits()
// products.editFruts()
// console.log(totalPrice)
// console.log(products.productsQuantity())
// console.log(products.fruts)


///////////////////////////////////////////////////////

// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ "movies", –¥–µ –∫–æ–∂–µ–Ω –æ–±'—î–∫—Ç –±—É–¥–µ –º—ñ—Å—Ç–∏—Ç–∏
//  –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ "title", "director", "year" —Ç–∞ "genre". 
//  –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ "movies" 
// —Ç–∞ –∂–∞–Ω—Ä (—Å—Ç—Ä–æ–∫—É) —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤,
//  —è–∫—ñ –Ω–∞–ª–µ–∂–∞—Ç—å –¥–æ —Ü—å–æ–≥–æ –∂–∞–Ω—Ä—É.

let movise = [
    {title: "Interpiration", director: "Fo Fo", year: 201, genre: "ss"},
    {title: "Lopata", director: "Vo Lo", year: 2001, genre: "po"},
    {title: "Porit", director: "Dotp", year: 2021, genre: "po"},
];

function getMoviesByGenre(movies, genre) {
    let result = [];
    for (let i = 0; i < movies.length; i++){
        if (movies[i].genre === genre) {
            result.push(movies[i])
        }
    }
    return result
}

let ssMovies = getMoviesByGenre (movise, "po")
console.log(ssMovies)

// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ—Ñ–ª–∞–π–Ω
// console.log(getOfflineFriends(friends));
// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ–±‚Äô—î–∫—Ç –º–∞—Å–∏–≤—ñ–≤
//   —ñ–º–µ–Ω –¥—Ä—É–∑—ñ–≤ —è–∫—ñ –æ—Ñ–ª–∞–π–Ω —Ç–∞ –æ–Ω–ª–∞–π–Ω. –°—Ç–≤–æ—Ä–∏—Ç–∏ 2 –º–∞—Å–∏–≤–∞ –æ–Ω–ª–∞–π–Ω —ñ –æ—Ñ–ª–∞–π–Ω,
//     —è–∫—â–æ —Ç—Ä—É - –≤ –ø–µ—Ä—à–∏–π, —è–∫—â–æ –Ω—ñ - –≤ –¥—Ä—É–≥–∏–π
// const getFriendsByStatus = function () {};
 
//   const friendByStat = {
//     onlineFriends: [],
//     offlineFriends: [],
//   }
//   console.log(getFriendsByStatus(friends));


const myFriends = {
    friends: [
        {
            name: "Nelya",
            isOneline: true,
        },
        {
            name: "Kata",
            isOneline: true,
        },
        {
            name: "Vika",
            isOneline: true,
        },
        {
            name: "Gosha",
            isOneline: true,
        },
        {
            name: "Kola",
            isOneline: true,
        },
    ],
    findFriendByName(name) {
        let message = "This friend does not existed";
        for (const friend of this.friends) {
            if (friend.name === name) {
                // message = `The friend ${}`
            }
        }
    },
    getAllNames () {
        let message = "";
        for (const friend of this.friends) {
            message += friend.name + ", "
        }
        return message
    },
    getOnlineFriends () {
        let message = "";
        for (const friend of this.friends) {
            if (friend.isOneline === true) {
                message += friend.name + ", "
            }
        }
        return message
    },
    getOfflineFriends() {
        let message = ""
        for (const friend of this.friends) {
            if (friend.isOneline === false) {
                message += friend.name + ", "
            }
        }
    },
    getFriendByStatus (){
        const onlineFriends = []
        const offlineFriends = []
        for (const friend of this.friends) {
            if (friend.isOneline === true) {
                onlineFriends.push(friend)
            } else {
                offlineFriends.push(friend)
            }
        }
        
    }
};

console.log(myFriends.getAllNames())
console.log(myFriends.findFriendByName("Kata"))
console.log(myFriends.getFriendByStatus())
console.log(myFriends.getOfflineFriends())
console.log(myFriends.getOnlineFriends())

